/*
$Id$
Copyright (C) 2001-2010, The Perl Foundation.

=head1 NAME

src/pmc/mutablevar.pmc - PMC implementing VAR functionality

=head1 DESCRIPTION

The MutableVAR PMC provides access to the container type of a scalar. This is
needed as scalar containers forward to their contents.

=head2 Methods

=cut

*/

#include "parrot/parrot.h"

pmclass MutableVAR dynpmc group perl6_group auto_attrs {
    ATTR PMC *scalar;

    VTABLE void init() {
        Parrot_ex_throw_from_c_args(INTERP, NULL, EXCEPTION_INVALID_OPERATION,
            "Must initialize MutableVAR with a scalar");
    }

    VTABLE void init_pmc(PMC *scalar) {
        /* Need custom mark. */
        PObj_custom_mark_SET(SELF);

        /* Set scalar value */
        SET_ATTR_scalar(INTERP, SELF, scalar);
    }

    VTABLE void mark() {
        PMC *scalar;
        GET_ATTR_scalar(INTERP, SELF, scalar);
        if (scalar)
            Parrot_gc_mark_PMC_alive(INTERP, scalar);
    }

    VTABLE PMC* getprop(STRING *prop_name) {
        PMC *scalar;
        GET_ATTR_scalar(INTERP, SELF, scalar);
        return VTABLE_getprop(INTERP, scalar, prop_name);
    }

    METHOD INTVAL readonly() {
        STRING *s_ro = Parrot_str_new(INTERP, "readonly", 0);
        PMC    *ro, *scalar;
        INTVAL  res;

        GET_ATTR_scalar(INTERP, SELF, scalar);
        ro = VTABLE_getprop(INTERP, scalar, s_ro);
        res = PMC_IS_NULL(ro) ? 0 : VTABLE_get_bool(INTERP, ro);
        RETURN(INTVAL res);
    }

    METHOD INTVAL rw() {
        INTVAL ro, rw;
        (INTVAL ro) = PCCINVOKE(INTERP, SELF, "readonly");
        rw = ro ? 0 : 1;
        RETURN (INTVAL rw);
    }

    METHOD PMC *of(PMC *type) {
        PMC *scalar;
        GET_ATTR_scalar(INTERP, SELF, scalar);
        if (!PMC_IS_NULL(type))
            VTABLE_setprop(interp, scalar, CONST_STRING(interp, "type"), type);
        else
            type = VTABLE_getprop(interp, scalar, CONST_STRING(interp, "type"));
        RETURN (PMC *type);
    }
}


/*
 * Local variables:
 *   c-file-style: "parrot"
 * End:
 * vim: expandtab shiftwidth=4:
 */

